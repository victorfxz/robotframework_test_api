<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.1 on win32)" generated="20230120 16:40:46.694" rpa="false" schemaversion="3">
<suite id="s1" name="Serverest Test" source="C:\Robot-Framework\api_test_robot\serverest_test.robot">
<kw name="Criar a sessao com a api serverest" library="serverest_test" type="SETUP">
<kw name="Criar os dados do usuario" library="serverest_test">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230120 16:40:59.409" level="INFO">${nome} = Roy Davis</msg>
<status status="PASS" starttime="20230120 16:40:59.408" endtime="20230120 16:40:59.410"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230120 16:40:59.411" level="INFO">${email} = jason34@example.org</msg>
<status status="PASS" starttime="20230120 16:40:59.410" endtime="20230120 16:40:59.411"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230120 16:40:59.411" level="INFO">${password} = +RWvJMVd#0</msg>
<status status="PASS" starttime="20230120 16:40:59.411" endtime="20230120 16:40:59.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${usuario}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230120 16:40:59.416" level="INFO">${usuario} = {'nome': 'Roy Davis', 'email': 'jason34@example.org', 'password': '+RWvJMVd#0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230120 16:40:59.412" endtime="20230120 16:40:59.416"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230120 16:40:59.417" level="INFO">${usuario} = {'nome': 'Roy Davis', 'email': 'jason34@example.org', 'password': '+RWvJMVd#0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230120 16:40:59.416" endtime="20230120 16:40:59.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${usuario}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230120 16:40:59.417" level="INFO">{'nome': 'Roy Davis', 'email': 'jason34@example.org', 'password': '+RWvJMVd#0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230120 16:40:59.417" endtime="20230120 16:40:59.418"/>
</kw>
<status status="PASS" starttime="20230120 16:40:59.400" endtime="20230120 16:40:59.418"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADER}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230120 16:40:59.418" level="INFO">${HEADER} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230120 16:40:59.418" endtime="20230120 16:40:59.419"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>${ALIAS}</arg>
<arg>url=${URL}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230120 16:40:59.419" level="INFO">Creating Session using : alias=session_serverest, url=https://serverest.dev, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230120 16:40:59.419" endtime="20230120 16:40:59.420"/>
</kw>
<status status="PASS" starttime="20230120 16:40:59.400" endtime="20230120 16:40:59.420"/>
</kw>
<test id="s1-t1" name="Testar Listar Produtos" line="11">
<kw name="Cadastrar o Usuario de Teste" library="serverest_test">
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${ALIAS}</arg>
<arg>json=${usuario}</arg>
<arg>url=${URL}/usuarios</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230120 16:41:01.534" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "Roy Davis", "email": "jason34@example.org", "password": "+RWvJMVd#0", "administrador": "true"}' 
 </msg>
<msg timestamp="20230120 16:41:01.534" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cdb4f3d0-9b9e-42b5-8933-18938a536f7e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '901d692b6192fd05cb5dffd84f239e89;o=1', 'Date': 'Fri, 20 Jan 2023 19:41:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "jwF3N2tsN6tFcFuH"
} 
 </msg>
<msg timestamp="20230120 16:41:01.534" level="INFO">${RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230120 16:40:59.430" endtime="20230120 16:41:01.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Resposta Retornada: ${RESPONSE.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230120 16:41:01.534" level="INFO">Resposta Retornada: {'message': 'Cadastro realizado com sucesso', '_id': 'jwF3N2tsN6tFcFuH'}</msg>
<status status="PASS" starttime="20230120 16:41:01.534" endtime="20230120 16:41:01.534"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Resposta Retornada: ${RESPONSE.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230120 16:41:01.534" endtime="20230120 16:41:01.549"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="PASS" starttime="20230120 16:41:01.549" endtime="20230120 16:41:01.549"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${RESPONSE}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20230120 16:41:01.549" endtime="20230120 16:41:01.549"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>Created</arg>
<arg>${RESPONSE.reason}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230120 16:41:01.549" endtime="20230120 16:41:01.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${201}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230120 16:41:01.557" endtime="20230120 16:41:01.563"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230120 16:41:01.566" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230120 16:41:01.563" endtime="20230120 16:41:01.566"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.headers["Content-Type"]}</arg>
<arg>application/json; charset=utf-8</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230120 16:41:01.566" endtime="20230120 16:41:01.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${RESPONSE.headers["Content-Type"]}</arg>
<arg>application/json</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230120 16:41:01.568" endtime="20230120 16:41:01.569"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>message</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230120 16:41:01.569" endtime="20230120 16:41:01.570"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count_id}</var>
<arg>${RESPONSE.json()["_id"]}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230120 16:41:01.571" level="INFO">Length is 16</msg>
<msg timestamp="20230120 16:41:01.571" level="INFO">${count_id} = 16</msg>
<status status="PASS" starttime="20230120 16:41:01.570" endtime="20230120 16:41:01.571"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${count_id}</arg>
<arg>16</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230120 16:41:01.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230120 16:41:01.571" endtime="20230120 16:41:01.571"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${RESPONSE.json()["_id"]}</arg>
<arg>16</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<msg timestamp="20230120 16:41:01.573" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20230120 16:41:01.572" endtime="20230120 16:41:01.575"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID_PRODUTO_CADASTRADO}</var>
<arg>${RESPONSE.json()}</arg>
<arg>_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230120 16:41:01.577" level="INFO">${ID_PRODUTO_CADASTRADO} = jwF3N2tsN6tFcFuH</msg>
<status status="PASS" starttime="20230120 16:41:01.575" endtime="20230120 16:41:01.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${ID_PRODUTO_CADASTRADO}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230120 16:41:01.577" level="INFO">${ID_PRODUTO_CADASTRADO} = jwF3N2tsN6tFcFuH</msg>
<status status="PASS" starttime="20230120 16:41:01.577" endtime="20230120 16:41:01.577"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Resposta ID:</arg>
<arg>${ID_PRODUTO_CADASTRADO}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230120 16:41:01.578" endtime="20230120 16:41:01.582"/>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>user.json</arg>
<arg>${RESPONSE.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20230120 16:41:01.583" endtime="20230120 16:41:01.880"/>
</kw>
<status status="PASS" starttime="20230120 16:40:59.428" endtime="20230120 16:41:01.880"/>
</kw>
<kw name="Efetuar o Login" library="serverest_test">
<kw name="Create Dictionary" library="BuiltIn">
<var>${BODY}</var>
<arg>email=${usuario.email}</arg>
<arg>password=${usuario.password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230120 16:41:01.901" level="INFO">${BODY} = {'email': 'jason34@example.org', 'password': '+RWvJMVd#0'}</msg>
<status status="PASS" starttime="20230120 16:41:01.896" endtime="20230120 16:41:01.901"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${ALIAS}</arg>
<arg>json=${BODY}</arg>
<arg>url=${URL}/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230120 16:41:02.104" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '58'} 
 body=b'{"email": "jason34@example.org", "password": "+RWvJMVd#0"}' 
 </msg>
<msg timestamp="20230120 16:41:02.104" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e5768c3d-2fe7-4abe-bfa6-688ae7919cee', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e33254870ae9e74460369949a364fbf3', 'Date': 'Fri, 20 Jan 2023 19:41:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '280'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imphc29uMzRAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IitSV3ZKTVZkIzAiLCJpYXQiOjE2NzQyNDM2NjgsImV4cCI6MTY3NDI0NDI2OH0.sMXgnhKJUby8rtZxYBIhKSnr9Kv_8OPeP4UHgF0LsEo"
} 
 </msg>
<msg timestamp="20230120 16:41:02.104" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230120 16:41:01.901" endtime="20230120 16:41:02.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Resposta : ${RESPONSE.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230120 16:41:02.104" level="INFO">Resposta : {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imphc29uMzRAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IitSV3ZKTVZkIzAiLCJpYXQiOjE2NzQyNDM2NjgsImV4cCI6MTY3NDI0NDI2OH0.sMXgnhKJUby8rtZxYBIhKSnr9Kv_8OPeP4UHgF0LsEo'}</msg>
<status status="PASS" starttime="20230120 16:41:02.104" endtime="20230120 16:41:02.104"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Resposta : ${RESPONSE.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230120 16:41:02.104" endtime="20230120 16:41:02.104"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="PASS" starttime="20230120 16:41:02.104" endtime="20230120 16:41:02.104"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>message</arg>
<arg>Login realizado com sucesso</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230120 16:41:02.104" endtime="20230120 16:41:02.104"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230120 16:41:02.112" level="INFO">Length is 207</msg>
<status status="PASS" starttime="20230120 16:41:02.104" endtime="20230120 16:41:02.112"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${TOKEN}</var>
<arg>${RESPONSE.json()}</arg>
<arg>authorization</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230120 16:41:02.113" level="INFO">${TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imphc29uMzRAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IitSV3ZKTVZkIzAiLCJpYXQiOjE2NzQyNDM2NjgsImV4cCI6MTY3NDI0NDI2OH0.sMXgnhKJUby8rtZxYBIhKSnr9Kv_8OPeP4UH...</msg>
<status status="PASS" starttime="20230120 16:41:02.112" endtime="20230120 16:41:02.113"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TOKEN}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230120 16:41:02.114" level="INFO">${TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imphc29uMzRAZXhhbXBsZS5vcmciLCJwYXNzd29yZCI6IitSV3ZKTVZkIzAiLCJpYXQiOjE2NzQyNDM2NjgsImV4cCI6MTY3NDI0NDI2OH0.sMXgnhKJUby8rtZxYBIhKSnr9Kv_8OPeP4UH...</msg>
<status status="PASS" starttime="20230120 16:41:02.113" endtime="20230120 16:41:02.114"/>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>login.json</arg>
<arg>${RESPONSE.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20230120 16:41:02.114" endtime="20230120 16:41:02.188"/>
</kw>
<status status="PASS" starttime="20230120 16:41:01.896" endtime="20230120 16:41:02.188"/>
</kw>
<tag>listarproduto</tag>
<status status="PASS" starttime="20230120 16:40:59.421" endtime="20230120 16:41:02.192"/>
</test>
<doc>Este é um teste simples da api pública serverest,
testando a listagem de produtos.</doc>
<status status="PASS" starttime="20230120 16:40:46.725" endtime="20230120 16:41:02.194"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">listarproduto</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Serverest Test">Serverest Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
